package com.company.arrays;

import com.company.Main;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;


public class MinimumSwaps2 {

    // Complete the minimumSwaps function below.
    static int minimumSwaps(int[] arr) {

        List<Integer> list = Arrays.stream(arr).boxed().collect(Collectors.toList());
        int min = Collections.min(list);  // usually 1

        int swaps = 0;
        int expected = min;

        for (int i = 0; i < arr.length; i++) {
            int actual = arr[i];

            if (actual != expected) {

                int temp = arr[actual - min];
                arr[actual - min] = arr[i];
                arr[i] = temp;

                swaps++;
                i--;
            } else {
                expected++;
            }
        }

        return swaps;
    }

    public static void main(String[] args) {

//        String str = "1 3 5 2 4 6 7";
//        List<String> strings = Arrays.asList("2 31 1 38 29 5 44 6 12 18 39 9 48 49 13 11 7 27 14 33 50 21 46 23 15 26 8 47 40 3 32 22 34 42 16 41 24 10 4 28 36 30 37 35 20 17 45 43 25 19".split(" "));
//        String str
//        List<String> strings = Arrays.asList("4 3 1 2".split(" "));

        // expect 46 -- actual 47
//        String str = "2 31 1 38 29 5 44 6 12 18 39 9 48 49 13 11 7 27 14 33 50 21 46 23 15 26 8 47 40 3 32 22 34 42 16 41 24 10 4 28 36 30 37 35 20 17 45 43 25 19";

        // expect 91  -- actual 94
        String str = "8 45 35 84 79 12 74 92 81 82 61 32 36 1 65 44 89 40 28 20 97 90 22 87 48 26 56 18 49 71 23 34 59 54 14 16 19 76 83 95 31 30 69 7 9 60 66 25 52 5 37 27 63 80 24 42 3 50 6 11 64 10 96 47 38 57 2 88 100 4 78 85 21 29 75 94 43 77 33 86 98 68 73 72 13 91 70 41 17 15 67 93 62 39 53 51 55 58 99 46";
//        String str = "1 5 4 3 2 6 7";

        List<String> strings = Arrays.asList(str.split(" "));
        int[] arr = new int[strings.size()];
        for (int i = 0; i < strings.size(); i++) {
            arr[i] = Integer.valueOf(strings.get(i));
        }

        int total = minimumSwaps(arr);

        Main.println(total);

    }

}
